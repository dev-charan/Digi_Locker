generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  verified      Boolean        @default(false)
  tokenVersion  Int            @default(0) // For token invalidation
  createdAt     DateTime       @default(now())
  loginLogs     LoginLog[]


  RefreshToken RefreshToken[]

  Document Document[]
}

model LoginLog {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  ip        String
  device    String?
  city      String? // Split location for better granularity
  country   String?
  createdAt DateTime @default(now())

  @@index([userId]) // Improve query performance
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @unique
  expiresAt DateTime
  revoked   Boolean  @default(false) // For auditing
  createdAt DateTime @default(now())
}

model Document {
  id           Int      @id @default(autoincrement())
  userId       Int
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  fileName     String
  originalName String
  fileSize     Int
  mimeType     String
  filePath     String
  description  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([userId])
}